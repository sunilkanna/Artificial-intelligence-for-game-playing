import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Generate some dummy data for training
import numpy as np
np.random.seed(42)

# Create a random dataset with 100 samples, each with 10 features
X_train = np.random.random((100, 10))
# Create labels for the dataset (binary classification)
y_train = np.random.randint(2, size=(100, 1))

# Build the feedforward neural network
model = Sequential()

# Add the input layer with 10 input neurons (assuming 10 features)
model.add(Dense(10, input_dim=10, activation='relu'))

# Add a hidden layer with 5 neurons
model.add(Dense(5, activation='relu'))

# Add the output layer with 1 neuron (binary classification)
model.add(Dense(1, activation='sigmoid'))

# Compile the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, batch_size=10)

# Make predictions
X_test = np.random.random((10, 10))  # Dummy test data
predictions = model.predict(X_test)

# Print predictions
print(predictions)
